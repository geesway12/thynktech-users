import{db,saveDb}from"./db.js";import{themePicker}from"./app.js";import{renderServiceVisitSelector}from"./services.js";import{encryptData,decryptData}from"./export.js";export function renderUserDashboard(e){const t=db.currentUser;if(!t)return void(window.location.hash="#login");const i=Array.isArray(t.assignedRegisters)?t.assignedRegisters:[],n=((db.registers||[]).filter(e=>i.includes(e.name)),db.facility||{}),s=`\n    <div class="facility-meta mb-3">\n      ${n.image?`<img src="${n.image}" alt="Facility Logo" style="max-height:60px; margin-bottom:8px;"><br>`:""}\n      <span class="fw-bold">${n.name||""}</span>\n      <div class="text-muted small">\n        ${[n.region&&`Region: ${n.region}`,n.district&&`District: ${n.district}`,n.community&&`Community: ${n.community}`,n.contact&&`Contact: ${n.contact}`].filter(Boolean).join(" | ")}\n      </div>\n    </div>\n  `;e.innerHTML=`\n  <style>\n    /* Ensure equal height for dashboard panels */\n    @media (min-width: 768px) {\n      .dashboard-row-equal {\n        display: flex;\n        flex-wrap: wrap;\n      }\n      .dashboard-row-equal > [class^='col-'] {\n        display: flex;\n        flex-direction: column;\n      }\n      .dashboard-row-equal .card {\n        flex: 1 1 auto;\n        height: 100%;\n        min-height: 350px;\n      }\n    }\n    @media (max-width: 767.98px) {\n      .dashboard-row-equal .card {\n        min-height: unset;\n      }\n    }\n  </style>\n  <div class="container my-4">\n    ${s}\n    <div class="d-flex justify-content-between align-items-center">\n      <h4><i class="bi bi-person"></i> Welcome, <a href="#profile" id="userProfileLink" class="text-decoration-none text-dark"><i class="bi bi-person-gear"></i> <b>${t.username}</b></a></h4>\n      ${themePicker}\n    </div>\n    <div class="row mt-4 g-3 dashboard-row-equal">\n      <div class="col-12 col-md-6 d-flex">\n        <div class="card shadow mb-4 flex-fill">\n          <div class="card-body d-flex flex-column">\n            <h5>Quick Actions</h5>\n            <div class="list-group mb-3 flex-grow-1">\n              ${t.canPatientReg?'<a href="#patient-reg" class="list-group-item list-group-item-action"><i class="bi bi-person-plus me-2"></i>Patient Registration</a>':""}\n              ${t.canVisitLog?'<a href="#visit-log" class="list-group-item list-group-item-action"><i class="bi bi-journal-medical me-2"></i>Visit Logging</a>':""}\n              <a href="#appointments" class="list-group-item list-group-item-action" id="appointmentsLink"><i class="bi bi-calendar-event me-2"></i>Appointments</a>\n              <a href="#reports" class="list-group-item list-group-item-action"><i class="bi bi-bar-chart me-2"></i>Reports</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-12 col-md-6 d-flex">\n        <div class="card shadow mb-4 flex-fill">\n          <div class="card-body d-flex flex-column">\n            <h5>Export & Data Sharing</h5>\n            <div class="d-grid gap-2 flex-grow-1">\n              <button class="btn btn-outline-info d-flex justify-content-start align-items-center" id="exportPatients">\n                <i class="bi bi-table me-2"></i>Export Patients (Excel)\n              </button>\n              <button class="btn btn-outline-info d-flex justify-content-start align-items-center" id="exportVisits">\n                <i class="bi bi-table me-2"></i>Export Visits (Excel)\n              </button>\n              <button class="btn btn-outline-info d-flex justify-content-start align-items-center" id="exportServices">\n                <i class="bi bi-table me-2"></i>Export Services (Excel)\n              </button>\n              <button class="btn btn-outline-info d-flex justify-content-start align-items-center" id="exportSummary">\n                <i class="bi bi-file-earmark-text me-2"></i>Export Summary (Excel)\n              </button>\n              <button class="btn btn-outline-secondary d-flex justify-content-start align-items-center" id="exportSingle">\n                <i class="bi bi-file-earmark-pdf me-2"></i>Export Single Patient (PDF)\n              </button>\n              <button class="btn btn-outline-success d-flex justify-content-start align-items-center" id="chooseShareBtn">\n                <i class="bi bi-arrow-up-right-circle me-2"></i>Share Data\n              </button>\n              <label class="btn btn-outline-primary d-flex justify-content-start align-items-center mb-0" style="cursor:pointer;">\n                <i class="bi bi-upload me-2"></i>Import Data\n                <input type="file" id="importSharedFile" hidden>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id="shareModal" class="modal"></div>\n    <div id="shareMsg" class="small mt-2 text-muted"></div>\n    <div class="text-end mt-3">\n      <button class="btn btn-outline-secondary" id="logoutBtn">\n        <i class="bi bi-box-arrow-right"></i> Logout\n      </button>\n    </div>\n    <button class="mobile-menu-btn" id="mobileMenuBtn">&#9776;</button>\n    <nav class="desktop-menu">\n      \x3c!-- your normal nav links/buttons here --\x3e\n    </nav>\n  </div>\n  `,import("./profile.js").then(i=>{const{renderProfile:n,isPasswordExpired:s}=i;s(t)&&setTimeout(()=>{alert("Your password has expired. Please update your password now."),n(e)},500),setTimeout(()=>{const t=document.getElementById("userProfileLink");t&&(t.onclick=t=>{t.preventDefault(),n(e)})},100)}),e.querySelector("#logoutBtn").onclick=()=>{db.currentUser=null,saveDb(),window.location.hash="#login"},document.getElementById("mobileMenuBtn")?.addEventListener("click",function(){document.body.classList.toggle("show-mobile-menu")}),e.querySelector("#exportPatients").onclick=()=>{l(db.patients||[],"patients-list.xlsx")},e.querySelector("#exportVisits").onclick=()=>{l(db.visits||[],"visits-list.xlsx")},e.querySelector("#exportServices").onclick=()=>{l(db.services||[],"services-list.xlsx")},e.querySelector("#exportSummary").onclick=()=>{l([{patients:(db.patients||[]).length,visits:(db.visits||[]).length,services:(db.services||[]).length,registers:(db.registers||[]).length}],"summary-report.xlsx")},e.querySelector("#exportSingle").onclick=()=>{const e=prompt("Enter Patient ID to export:");if(!e)return;const t=(db.patients||[]).find(t=>t.id===e.trim()||t.patientID===e.trim());t?function(e){const t=db.facility||{},i=(db.visits||[]).filter(t=>t.patientID===e.patientID),n=(db.services||[]).filter(t=>t.patientID===e.patientID),s=`\n      <html>\n      <head>\n        <title>Patient Report - ${e.name}</title>\n        <style>\n          body { font-family: Arial, sans-serif; margin: 40px; }\n          h2 { border-bottom: 1px solid #333; }\n          table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }\n          th, td { border: 1px solid #999; padding: 6px 8px; }\n          th { background: #eee; }\n          .facility-header { font-size: 1.2em; font-weight: bold; margin-bottom: 10px; }\n          .facility-meta { font-size: 0.95em; color: #555; margin-bottom: 20px; }\n          .footer { margin-top:40px;font-size:12px;color:#888; }\n          .logo { max-height: 60px; margin-bottom: 10px; }\n        </style>\n      </head>\n      <body>\n        ${t.image?`<img src="${t.image}" class="logo"><br>`:""}\n        <div class="facility-header">${t.name||""}</div>\n        <div class="facility-meta">\n          ${[t.region&&`Region: ${t.region}`,t.district&&`District: ${t.district}`,t.community&&`Community: ${t.community}`,t.contact&&`Contact: ${t.contact}`].filter(Boolean).join(" | ")}\n        </div>\n        <h2>Patient Report</h2>\n        <table>\n          <tr><th>ID</th><td>${e.patientID}</td></tr>\n          <tr><th>Name</th><td>${e.name}</td></tr>\n          <tr><th>Date of Birth</th><td>${e.dob||""}</td></tr>\n          <tr><th>Age</th><td>${e.age||""}</td></tr>\n          <tr><th>Sex</th><td>${e.sex||""}</td></tr>\n          <tr><th>Phone</th><td>${e.phone||""}</td></tr>\n          <tr><th>Address</th><td>${e.address||""}</td></tr>\n          <tr><th>ID Type</th><td>${e.idType||""}</td></tr>\n          <tr><th>ID Number</th><td>${e.idNumber||""}</td></tr>\n          <tr><th>Registration Date</th><td>${e.registrationDate||""}</td></tr>\n        </table>\n        <h3>Visits</h3>\n        <table>\n          <tr><th>Date</th><th>Service</th><th>Provider</th><th>Notes</th></tr>\n          ${i.map(e=>`<tr>\n            <td>${e.date||""}</td>\n            <td>${e.service||""}</td>\n            <td>${e.provider||""}</td>\n            <td>${e.notes||""}</td>\n          </tr>`).join("")}\n        </table>\n        <h3>Services Delivered</h3>\n        <table>\n          <tr><th>Date</th><th>Service</th><th>Provider</th><th>Outcome</th></tr>\n          ${n.map(e=>`<tr>\n            <td>${e.date||""}</td>\n            <td>${e.service||""}</td>\n            <td>${e.provider||""}</td>\n            <td>${e.outcome||""}</td>\n          </tr>`).join("")}\n        </table>\n        <footer class="footer">\n          Facility: ${t.name||""} | Region: ${t.region||""} | District: ${t.district||""} | Community: ${t.community||""} | Contact: ${t.contact||""} | Generated: ${(new Date).toLocaleString()}\n        </footer>\n      </body>\n      </html>\n    `,r=window.open("","_blank");r.document.write(s),r.document.close(),r.print()}(t):alert("Patient not found.")};const r=e.querySelector("#importSharedFile");r&&r.addEventListener("change",t=>{const i=t.target.files[0];if(!i)return;const n=new FileReader;n.onload=function(t){try{let i;try{i=JSON.parse(decryptData(t.target.result))}catch{i=JSON.parse(t.target.result)}let n={patients:0,visits:0,services:0,registers:0};i.patients?.forEach(e=>{db.patients.some(t=>t.id&&e.id&&t.id===e.id||t.patientID&&e.patientID&&t.patientID===e.patientID)||(db.patients.push(e),n.patients++)}),i.visits?.forEach(e=>{db.visits.some(t=>t.id&&e.id&&t.id===e.id||t.visitID&&e.visitID&&t.visitID===e.visitID)||(db.visits.push(e),n.visits++)}),i.services?.forEach(e=>{db.services.some(t=>t.id&&e.id&&t.id===e.id||t.serviceID&&e.serviceID&&t.serviceID===e.serviceID)||(db.services.push(e),n.services++)}),Array.isArray(i.registers)&&(db.registers=i.registers,n.registers=i.registers.length),i.servicesList&&(db.servicesList=i.servicesList),i.customPatientFields&&(db.customPatientFields=i.customPatientFields),i.facility&&(db.facility=i.facility),i.settings&&(db.settings=i.settings),saveDb(),e.querySelector("#shareMsg").innerHTML=`<div class="text-success">\n            Imported: ${n.patients} patients, ${n.visits} visits, ${n.services} services${n.registers?`, ${n.registers} registers`:""}.<br>\n            Registers and facility info updated.\n          </div>`}catch(t){e.querySelector("#shareMsg").innerHTML='<div class="text-danger">Import failed: Invalid or corrupted file.</div>'}},n.readAsText(i)});const a=e.querySelector("#chooseShareBtn"),o=e.querySelector("#shareModal");a&&o&&(a.onclick=()=>{o.className="active";const t=`\n        <label class="form-label mt-3">Select Specific Registers (optional)</label>\n        ${(db.registers||[]).map(e=>`\n          <div class="form-check">\n            <input class="form-check-input" type="checkbox" value="${e.name}" id="reg-${e.name}">\n            <label class="form-check-label" for="reg-${e.name}">${e.name}</label>\n          </div>\n        `).join("")}\n      `;o.innerHTML=`\n        <div class="modal-content mx-auto">\n          <h5>Select Data to Export</h5>\n          <form id="shareForm">\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="patients" id="sharePatients" checked>\n              <label class="form-check-label" for="sharePatients">Patients</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="visits" id="shareVisits" checked>\n              <label class="form-check-label" for="shareVisits">Visits</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="services" id="shareServices" checked>\n              <label class="form-check-label" for="shareServices">Service Entries</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="registers" id="shareRegisters" checked>\n              <label class="form-check-label" for="shareRegisters">Service Registers</label>\n            </div>\n            ${t}\n            <div class="d-flex justify-content-between mt-3">\n              <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-check-circle"></i> Export</button>\n              <button type="button" class="btn btn-secondary btn-sm" id="cancelShare"><i class="bi bi-x-circle"></i> Cancel</button>\n            </div>\n          </form>\n        </div>`,document.getElementById("cancelShare").onclick=()=>{o.className="",o.innerHTML=""},document.getElementById("shareForm").onsubmit=t=>{t.preventDefault();const i={};if(document.getElementById("sharePatients").checked&&(i.patients=db.patients||[]),document.getElementById("shareVisits").checked&&(i.visits=db.visits||[]),document.getElementById("shareServices").checked){const e=Array.from(document.querySelectorAll("input[id^=reg-]:checked")).map(e=>e.value);i.services=e.length?(db.services||[]).filter(t=>e.includes(t.formName)):db.services||[]}document.getElementById("shareRegisters").checked&&(i.registers=db.registers||[]);const n=new Blob([JSON.stringify(i,null,2)],{type:"application/json"}),s=URL.createObjectURL(n),r=document.createElement("a");r.href=s,r.download="shared-data.json",document.body.appendChild(r),r.click(),setTimeout(()=>{document.body.removeChild(r),URL.revokeObjectURL(s)},100),e.querySelector("#shareMsg").innerHTML='<div class="text-success">Selected data shared as JSON. Share via USB or SD card.</div>',o.className="",o.innerHTML=""}}),e.querySelectorAll(".service-entry-link").forEach(t=>{t.addEventListener("click",function(t){t.preventDefault();const i=new URL(this.href,window.location.origin).searchParams.get("service");renderServiceVisitSelector(i,{onBack:()=>renderUserDashboard(e)})})});const c=e.querySelector("#appointmentsLink");function l(e,t){if(!e.length)return void alert("No data to export.");const i=Object.keys(e[0]),n=[i.join(","),...e.map(e=>i.map(t=>`"${(e[t]??"").toString().replace(/"/g,'""')}"`).join(","))].join("\r\n"),s=new Blob([n],{type:"text/csv"}),r=URL.createObjectURL(s),a=document.createElement("a");a.href=r,a.download=t,document.body.appendChild(a),a.click(),setTimeout(()=>{document.body.removeChild(a),URL.revokeObjectURL(r)},100)}c&&c.addEventListener("click",function(t){t.preventDefault(),import("./appointments.js").then(t=>{t.renderAppointmentList(e)})})}