import{db,saveDb}from"./db.js";import{generatePatientID}from"./idUtils.js";import{themePicker}from"./app.js";import{calculateAge,formatDate}from"./utils.js";import{createVisitForm}from"./visits.js";import{renderServiceEntryForm}from"./services.js";import{renderAppointmentForm}from"./appointments.js";const fieldTypes=[{value:"text",label:"Text"},{value:"integer",label:"Integer"},{value:"decimal",label:"Decimal"},{value:"select_one",label:"Single Select (select_one)"},{value:"select_multiple",label:"Multiple Select (select_multiple)"},{value:"date",label:"Date"},{value:"time",label:"Time"},{value:"datetime",label:"DateTime"},{value:"note",label:"Note/Label"},{value:"calculate",label:"Calculation"},{value:"image",label:"Image"},{value:"audio",label:"Audio"},{value:"video",label:"Video"},{value:"file",label:"File Upload"},{value:"barcode",label:"Barcode"},{value:"qr_code",label:"QR Code"},{value:"geopoint",label:"Geopoint"},{value:"geotrace",label:"Geotrace"},{value:"geoshape",label:"Geoshape"}];function refresh(e={}){let t=db.patients||[];e.id&&(t=t.filter(t=>t.patientID?.includes(e.id))),e.name&&(t=t.filter(t=>t.name?.toLowerCase().includes(e.name.toLowerCase()))),e.phone&&(t=t.filter(t=>t.phone?.includes(e.phone))),document.getElementById("listBody").innerHTML=0===t.length?'<tr><td colspan="8" class="text-center text-muted">No patients found.</td></tr>':t.map((e,t)=>`\n    <tr>\n      <td>${e.patientID||""}</td>\n      <td>${e.name||""}</td>\n      <td>${formatDate(e.registrationDate)||""}</td>\n      <td>${formatDate(e.dob)||""}</td>\n      <td>${e.age??""}</td>\n      <td>${e.sex||""}</td>\n      <td>${e.phone||""}</td>\n      <td>\n        <button class="btn btn-sm btn-primary me-1" data-i="${t}" data-act="view" title="View/Edit"><i class="bi bi-eye"></i></button>\n        <button class="btn btn-sm btn-danger me-1" data-i="${t}" data-act="del" title="Delete"><i class="bi bi-trash"></i></button>\n        <button class="btn btn-sm btn-outline-success me-1" data-i="${t}" data-act="visit" title="Log Visit"><i class="bi bi-journal-plus"></i></button>\n        <button class="btn btn-sm btn-outline-secondary me-1" data-i="${t}" data-act="service" title="Service Entry"><i class="bi bi-ui-checks-grid"></i></button>\n        <button class="btn btn-sm btn-outline-primary" data-i="${t}" data-act="appoint" title="Book Appointment"><i class="bi bi-calendar-plus"></i></button>\n      </td>\n    </tr>\n    <tr class="visit-form-row d-none" data-form-i="${t}">\n      <td colspan="8"><div class="visit-form-container"></div></td>\n    </tr>`).join(""),document.querySelectorAll("[data-act=view]").forEach(e=>e.onclick=()=>showForm(t[e.dataset.i])),document.querySelectorAll("[data-act=del]").forEach(e=>e.onclick=()=>{confirm("Delete this patient?")&&(db.patients.splice(e.dataset.i,1),saveDb(),refresh())}),document.querySelectorAll("[data-act=visit]").forEach(e=>e.onclick=()=>{const n=e.dataset.i,l=t[n],a=document.querySelector(`.visit-form-row[data-form-i="${n}"]`),i=a.querySelector(".visit-form-container"),o=!a.classList.contains("d-none");document.querySelectorAll(".visit-form-row").forEach(e=>e.classList.add("d-none")),o||(i.innerHTML="",i.appendChild(createVisitForm(l,()=>{setTimeout(()=>a.classList.add("d-none"),2e3)})),a.classList.remove("d-none"))}),document.querySelectorAll("[data-act=service]").forEach(e=>e.onclick=()=>{const n=e.dataset.i,l=t[n];renderServiceEntryForm(l,db.registers||[])}),document.querySelectorAll("[data-act=appoint]").forEach(e=>e.onclick=()=>{const n=e.dataset.i,l=t[n];renderAppointmentForm(l)})}function attachFieldHandlers(){document.querySelectorAll(".editFieldBtn").forEach(e=>e.onclick=()=>showFieldFormPatient(db.customPatientFields[e.dataset.fidx],e.dataset.fidx)),document.querySelectorAll(".deleteFieldBtn").forEach(e=>e.onclick=()=>{confirm("Delete this field? Data already captured for this field will be kept in old records.")&&(db.customPatientFields.splice(e.dataset.fidx,1),saveDb(),refreshFields())}),document.querySelectorAll(".moveUpBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t>0&&([db.customPatientFields[t-1],db.customPatientFields[t]]=[db.customPatientFields[t],db.customPatientFields[t-1]],saveDb(),refreshFields())}),document.querySelectorAll(".moveDownBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t<db.customPatientFields.length-1&&([db.customPatientFields[t],db.customPatientFields[t+1]]=[db.customPatientFields[t+1],db.customPatientFields[t]],saveDb(),refreshFields())})}function refreshFields(){document.querySelector("#customFieldList").innerHTML=(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join(""),attachFieldHandlers(),(db.customPatientFields||[]).forEach(e=>{if("select_multiple"===e.type){const t=document.querySelectorAll(`input[id^="custom_${e.name}_"]`),n=document.getElementById(`custom_${e.name}`);t.length>0&&n&&t.forEach(e=>{e.addEventListener("change",()=>{const e=Array.from(t).filter(e=>e.checked).map(e=>e.value);n.value=e.join(", ")})})}})}export function renderPatientList(e){e.innerHTML=`\n    <div class="container my-4">\n      <div class="d-flex justify-content-between align-items-center">\n        <h4><i class="bi bi-people"></i> Patients</h4>\n        ${themePicker}\n      </div>\n\n      \x3c!-- search --\x3e\n      <form id="searchForm" class="row g-2 mb-3">\n        <div class="col-md-2"><input name="id"    class="form-control" placeholder="ID"></div>\n        <div class="col-md-3"><input name="name"  class="form-control" placeholder="Name"></div>\n        <div class="col-md-2"><input name="phone" class="form-control" placeholder="Phone 024-xxx-xxxx"></div>\n        <div class="col-md-2"><button class="btn btn-primary w-100"><i class="bi bi-search"></i> Search</button></div>\n        <div class="col-md-3 text-end">\n          <button class="btn btn-success w-100" type="button" id="addBtn"><i class="bi bi-person-plus"></i> New Patient</button>\n        </div>\n      </form>\n\n      \x3c!-- list --\x3e\n      <div class="table-responsive">\n        <table class="table table-bordered table-hover align-middle">\n          <thead class="table-light">\n            <tr>\n              <th>ID</th><th>Name</th><th>Reg&nbsp;Date</th><th>DOB</th><th>Age</th>\n              <th>Sex</th><th>Phone</th><th>Actions</th>\n            </tr>\n          </thead>\n          <tbody id="listBody"></tbody>\n        </table>\n      </div>\n\n      <a href="#admin-dashboard" class="btn btn-link mt-2"><i class="bi bi-arrow-left"></i> Back</a>\n      <div id="modalWrap"></div>\n    </div>\n  `,refresh(),document.getElementById("addBtn").onclick=()=>showForm(),document.getElementById("searchForm").onsubmit=e=>{e.preventDefault(),refresh(Object.fromEntries(new FormData(e.target)))}}function close(){document.getElementById("modalWrap").className="",document.getElementById("modalWrap").innerHTML=""}function renderCustomField(e,t){const n=t.customFields&&t.customFields[e.name]||"",l=`custom_${e.name}`;switch(e.type){case"text":default:return`<input id="${l}" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"integer":return`<input id="${l}" type="number" step="1" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"decimal":return`<input id="${l}" type="number" step="any" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"date":return`<input id="${l}" type="date" class="form-control mb-2" value="${n}">`;case"select_one":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),`<select id="${l}" class="form-select mb-2"><option value="">${e.label||e.name}</option>`+t.map(e=>`<option value="${e}"${n===e?" selected":""}>${e}</option>`).join("")+"</select>"}case"select_multiple":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),'<div class="mb-2">'+t.map((e,t)=>{const a=n.split(",").map(e=>e.trim()).includes(e)?"checked":"";return`<div class="form-check form-check-inline">\n              <input class="form-check-input" type="checkbox" id="${l}_${t}" value="${e}" ${a}>\n              <label class="form-check-label" for="${l}_${t}">${e}</label>\n            </div>`}).join("")+`<input type="hidden" id="${l}" value="${n}"></div>`}case"note":return`<div class="alert alert-secondary mb-2">${e.label||e.name}</div>`}}function renderFieldRow(e,t){return`<li class="list-group-item d-flex justify-content-between align-items-center">\n      <span><b>${e.label||e.name}</b> <small class="text-muted">(${e.type})</small></span>\n      <span>\n        <button type="button" class="btn btn-sm btn-outline-primary editFieldBtn" data-fidx="${t}"><i class="bi bi-pencil"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-danger deleteFieldBtn" data-fidx="${t}"><i class="bi bi-trash"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-secondary moveUpBtn" data-fidx="${t}"><i class="bi bi-arrow-up"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-secondary moveDownBtn" data-fidx="${t}"><i class="bi bi-arrow-down"></i></button>\n      </span>\n    </li>`}function showFieldFormPatient(e={name:"",type:"text",required:!1},t=null){const n=document.createElement("div");n.className="modal-overlay",n.innerHTML=`\n      <div class="modal-content mx-auto" style="max-width:400px;">\n        <h6>${null!==t?"Edit Field":"Add Field"}</h6>\n        <form id="fieldForm">\n          <div class="mb-2"><input class="form-control" id="fieldName" placeholder="Field Name" required value="${e.name||""}"></div>\n          <div class="mb-2">\n            <select class="form-select" id="fieldType" required>\n              ${fieldTypes.map(t=>`<option value="${t.value}"${e.type===t.value?" selected":""}>${t.label}</option>`).join("")}\n            </select>\n          </div>\n          <div class="mb-2 form-check">\n            <input class="form-check-input" type="checkbox" id="fieldReq" ${e.required?"checked":""}>\n            <label class="form-check-label" for="fieldReq">Required</label>\n          </div>\n          <div class="mb-2"><input class="form-control" id="fieldDefault" placeholder="Default Value" value="${e.default||""}"></div>\n          <div class="mb-2"><input class="form-control" id="fieldConstraint" placeholder="Constraint/Validation (e.g. min=0,max=100)" value="${e.constraint||""}"></div>\n          <div class="mb-2" id="choicesRow" style="display:${["select_one","select_multiple"].includes(e.type)?"block":"none"}">\n            <input class="form-control" id="fieldChoices" placeholder="Choices (comma-separated, e.g. Yes,No,Unknown)" value="${e.choices||""}" ${["select_one","select_multiple"].includes(e.type)?"required":""}>\n          </div>\n          <div class="mb-2" id="calcRow" style="display:${"calculate"===e.type?"block":"none"}">\n            <input class="form-control" id="fieldCalc" placeholder="Calculation Formula (e.g. today() - dob)" value="${e.calc||""}">\n          </div>\n          <div class="mb-2 d-flex justify-content-between">\n            <button class="btn btn-primary">${null!==t?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelFieldBtn">Cancel</button>\n          </div>\n        </form>\n      </div>\n    `,document.body.appendChild(n),n.onclick=e=>{e.target===n&&document.body.removeChild(n)},n.querySelector("#cancelFieldBtn").onclick=()=>document.body.removeChild(n),n.querySelector("#fieldType").onchange=function(){const e=["select_one","select_multiple"].includes(this.value);n.querySelector("#choicesRow").style.display=e?"block":"none",n.querySelector("#fieldChoices").required=e,n.querySelector("#calcRow").style.display="calculate"===this.value?"block":"none"},n.querySelector("#fieldForm").onsubmit=function(e){e.preventDefault();let l={name:this.fieldName.value,type:this.fieldType.value,required:this.fieldReq.checked,default:this.fieldDefault.value,constraint:this.fieldConstraint.value};["select_one","select_multiple"].includes(l.type)&&(l.choices=this.fieldChoices.value),"calculate"===l.type&&(l.calc=this.fieldCalc.value),null!==t?db.customPatientFields[t]=l:db.customPatientFields.push(l),saveDb(),document.body.removeChild(n),"function"==typeof refreshFields&&refreshFields()}}function showForm(e={}){const t=(new Date).toISOString().slice(0,10),n=document.getElementById("modalWrap");n.innerHTML=`\n      <div class="modal-content mx-auto">\n        <h5>${e.patientID?"Edit":"New"} Patient</h5>\n        <form id="pForm" class="mt-2">\n          <label class="form-label mb-0">Date of Registration</label>\n          <input  type="date" id="dor" class="form-control mb-2"\n                  value="${e.registrationDate||t}" max="${t}" required>\n\n          <label class="form-label mb-0">Date of Birth</label>\n          <input  type="date" id="dob" class="form-control" value="${e.dob||""}" max="${t}">\n          <small id="ageLive" class="text-muted mb-2 d-block"></small>\n\n          <input  id="name"  class="form-control mb-2" placeholder="Full Name" required value="${e.name||""}">\n\n          <select id="sex" class="form-select mb-2" required>\n            <option value="">Sex</option>\n            <option value="M"${"M"===e.sex?" selected":""}>Male</option>\n            <option value="F"${"F"===e.sex?" selected":""}>Female</option>\n            <option value="O"${"O"===e.sex?" selected":""}>Other</option>\n          </select>\n\n          <input id="phone" class="form-control mb-2" placeholder="Phone 024-xxx-xxxx" value="${e.phone||""}">\n          <input id="address" class="form-control mb-2" placeholder="Address" value="${e.address||""}">\n\n          <select id="idType" class="form-select mb-2">\n            <option value="">ID Type (optional)</option>\n            <option value="NIN"${"NIN"===e.idType?" selected":""}>National ID</option>\n            <option value="DL" ${"DL"===e.idType?" selected":""}>Driver's License</option>\n            <option value="VOT"${"VOT"===e.idType?" selected":""}>Voter's Card</option>\n          </select>\n          <input id="idNumber" class="form-control mb-3" placeholder="ID Number" value="${e.idNumber||""}">\n\n          ${(db.customPatientFields||[]).map(t=>renderCustomField(t,e)).join("")}\n\n          <div class="mb-3">\n            <button type="button" class="btn btn-sm btn-success" id="addFieldBtn"><i class="bi bi-plus"></i> Add Custom Field</button>\n            <ul class="list-group mt-2" id="customFieldList">\n              ${(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join("")}\n            </ul>\n          </div>\n\n          <div class="d-flex justify-content-between">\n            <button class="btn btn-primary">${e.patientID?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelF">Cancel</button>\n          </div>\n        </form>\n      </div>`,n.className="active",n.onclick=e=>{e.target===n&&close()},document.getElementById("cancelF").onclick=close;const l=document.getElementById("pForm"),a=l.dob,i=l.querySelector("#ageLive"),o=()=>i.textContent=a.value?`Age: ${calculateAge(a.value)}`:"";a.addEventListener("input",o),o(),db.customPatientFields||(db.customPatientFields=[]),document.getElementById("addFieldBtn").onclick=()=>showFieldFormPatient(),l.onsubmit=t=>{t.preventDefault();const n=e.patientID?e:{};if(n.registrationDate=l.dor.value,n.dob=l.dob.value,n.name=l.name.value.trim(),n.sex=l.sex.value,n.phone=l.phone.value.trim(),n.address=l.address.value.trim(),n.idType=l.idType.value,n.idNumber=l.idNumber.value.trim(),n.age=n.dob?calculateAge(n.dob):"",n.customFields=n.customFields||{},(db.customPatientFields||[]).forEach(e=>{const t=document.getElementById(`custom_${e.name}`);t&&(n.customFields[e.name]=t.value)}),n.patientID||(n.patientID=generatePatientID(n.registrationDate)),e.patientID){const e=db.patients.findIndex(e=>e.patientID===n.patientID);-1!==e&&(db.patients[e]=n)}else db.patients.push(n);saveDb(),close(),"function"==typeof refresh&&refresh()},"function"==typeof attachFieldHandlers&&attachFieldHandlers()}export{showForm as showPatientRegistrationModal};