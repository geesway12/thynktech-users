export function getFieldInputHtml(e,t=""){switch(e.type){case"text":default:return`<input type="text" class="form-control" id="f_${e.name}" value="${t||""}">`;case"number":case"integer":case"decimal":return`<input type="number" class="form-control" id="f_${e.name}" value="${t||""}" ${"integer"===e.type?'step="1"':""}>`;case"date":return`<input type="date" class="form-control" id="f_${e.name}" value="${t||""}">`;case"select_one":return`<select class="form-select" id="f_${e.name}">${(e.choices||"").split(",").map(e=>`<option value="${e.trim()}"${t===e.trim()?" selected":""}>${e.trim()}</option>`).join("")}</select>`}}export function validateFieldConstraint(e,t){if(!t||!e)return!0;const r=t.split(",");for(let t of r){const[r,n]=t.split("=");if("min"===r&&Number(e)<Number(n))return!1;if("max"===r&&Number(e)>Number(n))return!1;if("regex"===r&&!new RegExp(n).test(e))return!1}return!0}